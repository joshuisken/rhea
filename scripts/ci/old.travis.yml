 # see earlier versions of the travis.yml for examples and
 # info installing tools, they have been removed for now
 # until some of the tools are more mature
addons:
  apt:
    source:
      - ubuntu-toolchain-r-test
    packages:
      - build-essential
      - clang
      - bison
      - flex
      - libreadline-dev
      - gawk
      - tcl
      - tcl-dev
      - graphviz
      - xdot
      - pkg-config
      - autoconf
      - gperf
      - libffi-dev
      - libftdi-dev
#    update-alternatives:
#      - install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50
#      - install /usr/bin/g++ g++ /usr/bin/g++-4.9 50

# cannot figure out how to get a new version of gcc
# to build the dependencies.
# gcc-4.8 ??? why no work?
# g++-4.8 ??? why no work?

cache:
  directories:
  - $HOME/iverilog
  - $HOME/icestorm
  - $HOME/arachne-pnr
  - $HOME/yosys

before_install:
  - g++ --version
  - export PATH=$PATH:$HOME/iverilog/bin/:$HOME/yosys/
  - export PATH=$PATH:$HOME/icestorm/icepack/:$HOME/arachne-pnr/bin/
  - echo $HOME
  - ls $HOME/
  - chmod +x ./scripts/ci/install_iverilog.sh
  - ./scripts/ci/install_iverilog.sh
# these fail to build and install because the inability to
# update to gcc >= 4.8
#  - chmod +x ./scripts/ci/install_icestorm.sh
#  - ./scripts/ci/install_icestorm.sh
#  - chmod +x ./scripts/ci/install_arachne.sh
#  - ./scripts/ci/install_arachne.sh
  - chmod +x ./scripts/ci/install_yosys.sh
  - ./scripts/ci/install_yosys.sh
  - ls $HOME/yosys/
  - yosys -V

# command to install dependencies
install:
  - chmod +x ./scripts/ci/install_myhdl.sh
  - ./scripts/ci/install_myhdl.sh
  - pip install coverage
  - pip install coveralls
  - pip install Pillow
  - pip install .

# the longtests still take too long with pypy
#matrix:
#  exclude:
#    - python: "pypy"
#  include:
#    - python: "pypy"
#      env: RUNLONG="--runlong"

# run the test
# coverage with pypy hangs
script:
  #- rm -f .coverage
  - cd examples
  #- coverage run --source=rhea -m pytest --durations=10
  - py.test --durations=10
  #- mv .coverage ../.coverage.ex
  - cd ../test
  #- coverage run --source=rhea -m pytest $RUNLONG --durations=10
  - py.test --durations=10
  #- mv .coverage ../.coverage.mn
  #- coverage combine

after_success:
  - coveralls

notifications:
  email: false
